
name: Generate Builds

on: workflow_dispatch

jobs:
  ##################################################### ANDROID #################################################     
  android:
    runs-on: ubuntu-latest

    steps:
    # --------------------------------------------- GET REPOSITORY ----------------------------------------------    
    - uses: actions/checkout@v2

    # ---------------------------------------------- OPTIMIZATIONS ----------------------------------------------    
    - name: Yarn install cache
      uses: c-hive/gha-yarn-cache@v1

    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-caches-

    # ------------------------------------------ INSTALL DEPENDENCIES -------------------------------------------
    - name: Install dependencies
      run: yarn

    # ----------------------------------------- SETUP BUILD ENVIRONMENT -----------------------------------------
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
 
    - name: Add gradle properties
      run: |
        mkdir -p $HOME/.gradle
        echo "
        MYAPP_UPLOAD_STORE_FILE=upload-key
        MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_UPLOAD_KEY_ALIAS }}
        MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_UPLOAD_STORE_PASSWORD }}
        MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_UPLOAD_KEY_PASSWORD }}
        " > $HOME/.gradle/gradle.properties
    
    - name: Add Keystore file
      run: echo ${{ secrets.ANDROID_BASE64_UPLOAD_KEYSTORE }} | base64 --decode > ./android/app/upload-key
      
    # ----------------------------------------- SETUP STORE CREDENTIALS -----------------------------------------
    - name: Add service account file
      run: echo ${{ secrets.ANDROID_BASE64_SERVICE_ACCOUNT_JSON }} | base64 --decode > ./android/service-account.json

    # ------------------------------------------ BUILD AND DISTRIBUTE -------------------------------------------
    
    - name: Build and Upload to Google Play Console Internal Track
      uses: maierj/fastlane-action@v2.2.0
      with:
        lane: deploy
        subdirectory: android

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Android Release
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 0
  
  ####################################################### IOS ###################################################   
  ios:
    runs-on: macos-latest
    steps:
    # --------------------------------------------- GET REPOSITORY ----------------------------------------------    
    - uses: actions/checkout@v2

    # ---------------------------------------------- OPTIMIZATIONS ----------------------------------------------    
    - uses: mikehardy/buildcache-action@v1.2.2
    
    - name: Yarn install cache
      uses: c-hive/gha-yarn-cache@v1

    - name: Cache Pods
      uses: actions/cache@v2
      with:
        path: ./ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: ${{ runner.os }}-pods-

    # ------------------------------------------ INSTALL DEPENDENCIES -------------------------------------------
    - name: Install dependencies
      run: yarn

    - name: Install pods
      run: npx pod-install

    # ----------------------------------------- SETUP BUILD ENVIRONMENT -----------------------------------------      

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    # ----------------------------------------- SETUP STORE CREDENTIALS -----------------------------------------
    # - name: Add env variables for fastlane
    #  working-directory: ./ios/fastlane
    #  run: |
    #    echo "FASTLANE_TEAM_ID='${{ secrets.IOS_TEAM_ID }}'" >> .env
    #    echo "APP_STORE_CONNECT_API_KEY_KEY_ID='${{ secrets.IOS_KEY_ID }}'" >> .env
    #    echo "APP_STORE_CONNECT_API_KEY_ISSUER_ID='${{ secrets.IOS_ISSUER_ID }}'" >> .env
    #    echo "APP_STORE_CONNECT_API_KEY_KEY='${{ secrets.IOS_KEY_CONTENT }}'" >> .env
    # ------------------------------------------ BUILD AND DISTRIBUTE -------------------------------------------        
    - name: Build and upload to Testflight
      uses: maierj/fastlane-action@v2.2.0
      with:
        lane: build
        subdirectory: ios

    - name: Upload IPA artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: iOS Release
        path: ios/patentBuddyNative.ipa
        retention-days: 0
